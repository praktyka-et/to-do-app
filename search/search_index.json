{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Zalo\u017cenia Za\u0142o\u017cenia funckjonalne Dodawanie Item\u00f3w do listy B\u0119dzie one wykonywane po klikni\u0119ciu przycisku na stronie, ka\u017cde poszczeg\u00f3lne zadanie b\u0119dzie wpisane do listy kt\u00f3ra znajduje si\u0119 pod przyciskiem. Itemy te b\u0119d\u0105 zapisywa\u0107 si\u0119 w li\u015bcie ul> jako elementy li Wraz z dodaniem elemntu powinni\u015bmy mie\u0107 r\u00f3wnie\u017c mo\u017cliwo\u015b\u0107 ustalenia daty(terminu) do jakiego musi zosta\u0107 wykonany, kt\u00f3ry b\u0119dzie p\u00f3\u017aniej widnia\u0142 obok elementu na li\u015bcie Usuwanie item\u00f3w z listy Po tym jak ju\u017c dodamy swoje pierwsze zadanie, obok zadania pojawi sie przycisk umo\u017cliwiaj\u0105cy usuni\u0119cie poszczeg\u00f3lnego zadania, Po dodaniu pierwszego zadania w aplikacji powstanie przycisk umo\u017cliwiaj\u0105cy wyczysczenie ca\u0142ej naszej listy, button umo\u017cliwij\u0105cy zrobienie tego pojawi si\u0119 nad nasz\u0105 To-Do-List\u0105 po dodaniu jednego (lub wi\u0119cej) zadania, pojawi si\u0119 pole, b\u0119dzie je mo\u017cna zaznaczy\u0107, po zaznaceniu itemu pojawi si\u0119 przycisk umo\u017cliwiaj\u0105cy usuni\u0119cie zaznaczonych item\u00f3w Limity Aplikacja nie powinna posiada\u0107 limit\u00f3w co do ilo\u015bci zada\u0144 jakie b\u0119dzie mo\u017cna doda\u0107 do naszej To-Do-Listy, jedyne jej ograniczenie(blokade) b\u0119dzie stanowi\u0107 pr\u00f3ba wpisania zadania o takiej samej nazwie jakie widnieje ju\u017c na naszej li\u015bcie. Za\u0142o\u017cenia niefunkcjonalne Wy\u015bwietlanie item\u00f3 w formie listy Zadania(itemy), jakie dodamy za pomoc\u0105 przycisku, b\u0119d\u0105 si\u0119 wy\u015bwietla\u0107 w formie imituj\u0105cej liste, b\u0119d\u0105 one wypunktowane(b\u0105d\u017a ponumerowane) struktura aplikacji Aplikacja b\u0119dzie zbudowana tak by by\u0142a responsywna(dopasowana zar\u00f3wno na tablety i telefony), za backend strony b\u0119dzie odpowiada\u0142 node.js a frontend b\u0119dzie napisany za pomoc\u0105 frameworku react aplikacja powinna nam przywita\u0107 panelem logowania, gdzie b\u0119dziemy mogli zarejestrowa\u0107 si\u0119 jako nowi u\u017cytkownicy, lub te\u017c zalogowa\u0107 je\u017celi nasze konto ju\u017c istnieje przechowywanie danych -Dane po stronie frontu b\u0119d\u0105 zapisywane w formie wcze\u015bniej wspomnianiej listy, b\u0119d\u0105 one widoczne w podgl\u0105dzie strony -Wszystkie dane po stronie BackEndu b\u0119d\u0105 przechowywane w nierelacyjnej bazie danych o nazwie MongoDB struktura danych Dane b\u0119d\u0105 zapisywane w poszczeg\u00f3lnych tabelach bazy danych o odpowiendich nazwach, ka\u017cda poszczeg\u00f3lna informacja taka jak np: nazwa u\u017cytkownika, b\u0119dzie widnia\u0142a w pojedynczym rekordzie w bazie szczeg\u00f3\u0142y Aplikacja w polu inputu po wpisaniu zadania kt\u00f3re chcemy doda\u0107 do listy powinna wykasowa\u0107 informacje z inputa dla wi\u0119kszego komfortu korzystania z aplikacji, aplikacja oczywi\u015bcie powinna nie od\u015bwie\u017ca\u0107 na nowo okna przegl\u0105darki za ka\u017cdym razem jak dodamy zadanie do listy Aplikacja powinna by\u0107 responsywna","title":"zalozenia"},{"location":"#zalozenia","text":"","title":"Zalo\u017cenia"},{"location":"#zaozenia-funckjonalne","text":"Dodawanie Item\u00f3w do listy B\u0119dzie one wykonywane po klikni\u0119ciu przycisku na stronie, ka\u017cde poszczeg\u00f3lne zadanie b\u0119dzie wpisane do listy kt\u00f3ra znajduje si\u0119 pod przyciskiem. Itemy te b\u0119d\u0105 zapisywa\u0107 si\u0119 w li\u015bcie ul> jako elementy li Wraz z dodaniem elemntu powinni\u015bmy mie\u0107 r\u00f3wnie\u017c mo\u017cliwo\u015b\u0107 ustalenia daty(terminu) do jakiego musi zosta\u0107 wykonany, kt\u00f3ry b\u0119dzie p\u00f3\u017aniej widnia\u0142 obok elementu na li\u015bcie Usuwanie item\u00f3w z listy Po tym jak ju\u017c dodamy swoje pierwsze zadanie, obok zadania pojawi sie przycisk umo\u017cliwiaj\u0105cy usuni\u0119cie poszczeg\u00f3lnego zadania, Po dodaniu pierwszego zadania w aplikacji powstanie przycisk umo\u017cliwiaj\u0105cy wyczysczenie ca\u0142ej naszej listy, button umo\u017cliwij\u0105cy zrobienie tego pojawi si\u0119 nad nasz\u0105 To-Do-List\u0105 po dodaniu jednego (lub wi\u0119cej) zadania, pojawi si\u0119 pole, b\u0119dzie je mo\u017cna zaznaczy\u0107, po zaznaceniu itemu pojawi si\u0119 przycisk umo\u017cliwiaj\u0105cy usuni\u0119cie zaznaczonych item\u00f3w Limity Aplikacja nie powinna posiada\u0107 limit\u00f3w co do ilo\u015bci zada\u0144 jakie b\u0119dzie mo\u017cna doda\u0107 do naszej To-Do-Listy, jedyne jej ograniczenie(blokade) b\u0119dzie stanowi\u0107 pr\u00f3ba wpisania zadania o takiej samej nazwie jakie widnieje ju\u017c na naszej li\u015bcie.","title":"Za\u0142o\u017cenia funckjonalne"},{"location":"#zaozenia-niefunkcjonalne","text":"Wy\u015bwietlanie item\u00f3 w formie listy Zadania(itemy), jakie dodamy za pomoc\u0105 przycisku, b\u0119d\u0105 si\u0119 wy\u015bwietla\u0107 w formie imituj\u0105cej liste, b\u0119d\u0105 one wypunktowane(b\u0105d\u017a ponumerowane) struktura aplikacji Aplikacja b\u0119dzie zbudowana tak by by\u0142a responsywna(dopasowana zar\u00f3wno na tablety i telefony), za backend strony b\u0119dzie odpowiada\u0142 node.js a frontend b\u0119dzie napisany za pomoc\u0105 frameworku react aplikacja powinna nam przywita\u0107 panelem logowania, gdzie b\u0119dziemy mogli zarejestrowa\u0107 si\u0119 jako nowi u\u017cytkownicy, lub te\u017c zalogowa\u0107 je\u017celi nasze konto ju\u017c istnieje przechowywanie danych -Dane po stronie frontu b\u0119d\u0105 zapisywane w formie wcze\u015bniej wspomnianiej listy, b\u0119d\u0105 one widoczne w podgl\u0105dzie strony -Wszystkie dane po stronie BackEndu b\u0119d\u0105 przechowywane w nierelacyjnej bazie danych o nazwie MongoDB struktura danych Dane b\u0119d\u0105 zapisywane w poszczeg\u00f3lnych tabelach bazy danych o odpowiendich nazwach, ka\u017cda poszczeg\u00f3lna informacja taka jak np: nazwa u\u017cytkownika, b\u0119dzie widnia\u0142a w pojedynczym rekordzie w bazie szczeg\u00f3\u0142y Aplikacja w polu inputu po wpisaniu zadania kt\u00f3re chcemy doda\u0107 do listy powinna wykasowa\u0107 informacje z inputa dla wi\u0119kszego komfortu korzystania z aplikacji, aplikacja oczywi\u015bcie powinna nie od\u015bwie\u017ca\u0107 na nowo okna przegl\u0105darki za ka\u017cdym razem jak dodamy zadanie do listy Aplikacja powinna by\u0107 responsywna","title":"Za\u0142o\u017cenia niefunkcjonalne"},{"location":"projekt/","text":"Projekt Wczesny podgl\u0105d wygl\u0105du aplikacji wygl\u0105d aplikacji mo\u017ce ulega\u0107 zmianie wraz z nauk\u0105 osoby tworz\u0105cej j\u0105, jest to wczesny podgl\u0105d maj\u0105cy da\u0107 og\u00f3lne obeznanie co do jej dzia\u0142ania.","title":"projekt"},{"location":"projekt/#projekt","text":"","title":"Projekt"},{"location":"projekt/#wczesny-podglad-wygladu-aplikacji","text":"wygl\u0105d aplikacji mo\u017ce ulega\u0107 zmianie wraz z nauk\u0105 osoby tworz\u0105cej j\u0105, jest to wczesny podgl\u0105d maj\u0105cy da\u0107 og\u00f3lne obeznanie co do jej dzia\u0142ania.","title":"Wczesny podgl\u0105d wygl\u0105du aplikacji"},{"location":"technologie/","text":"technologie frontend react aplikacja b\u0119dzie napsisana za pomoc\u0105 reacta, ze wzgl\u0119du na jego popularno\u015b\u0107 i mnogo\u015b\u0107 pomocy naukowych dost\u0119pnych w internecie. stylowanie aplikacja b\u0119dzie ostylowana za pomoc\u0105 arkuszy styli css backend node.js Ca\u0142y backend naszej strony b\u0119dzie napisany w node.js wraz z jego frameworkiem o nazwie express, wybrane one zosta\u0142y poniewa\u017c s\u0105 one bardzo powszechne, i wiele aspektach lepsze ni\u017c np: php Za przechowywanie danych naszej aplikacji b\u0119dzie odpowiedzialna baza danych o nazwie MongoDB, jest ona nierelacyjna i bardzo cz\u0119sto stosowana do wsp\u00f3\u0142pracy z node'm","title":"technologie"},{"location":"technologie/#technologie","text":"","title":"technologie"},{"location":"technologie/#frontend","text":"react aplikacja b\u0119dzie napsisana za pomoc\u0105 reacta, ze wzgl\u0119du na jego popularno\u015b\u0107 i mnogo\u015b\u0107 pomocy naukowych dost\u0119pnych w internecie. stylowanie aplikacja b\u0119dzie ostylowana za pomoc\u0105 arkuszy styli css","title":"frontend"},{"location":"technologie/#backend","text":"node.js Ca\u0142y backend naszej strony b\u0119dzie napisany w node.js wraz z jego frameworkiem o nazwie express, wybrane one zosta\u0142y poniewa\u017c s\u0105 one bardzo powszechne, i wiele aspektach lepsze ni\u017c np: php Za przechowywanie danych naszej aplikacji b\u0119dzie odpowiedzialna baza danych o nazwie MongoDB, jest ona nierelacyjna i bardzo cz\u0119sto stosowana do wsp\u00f3\u0142pracy z node'm","title":"backend"}]}